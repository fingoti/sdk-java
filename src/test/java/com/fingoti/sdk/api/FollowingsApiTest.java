/*
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingoti.sdk.api;

import com.fingoti.sdk.ApiException;
import com.fingoti.sdk.models.AddFollowDto;
import com.fingoti.sdk.models.DefaultWithId;
import com.fingoti.sdk.models.ModelDefault;
import com.fingoti.sdk.models.OrganisationFollowingResponse;
import com.fingoti.sdk.models.PatchFollowRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FollowingsApi
 */
@Disabled
public class FollowingsApiTest {

    private final FollowingsApi api = new FollowingsApi();

    /**
     * Delete a Pin Following. This is not recoverable.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFollowingsIdTest() throws ApiException {
        UUID id = null;
        ModelDefault response = api.deleteFollowingsId(id);
        // TODO: test validations
    }

    /**
     * Get all pin followings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFollowingsTest() throws ApiException {
        Integer pageNumber = null;
        Integer itemsPerPage = null;
        String followName = null;
        String source = null;
        String destination = null;
        OrganisationFollowingResponse response = api.getFollowings(pageNumber, itemsPerPage, followName, source, destination);
        // TODO: test validations
    }

    /**
     * Get specified pin following.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFollowingsIdTest() throws ApiException {
        UUID id = null;
        OrganisationFollowingResponse response = api.getFollowingsId(id);
        // TODO: test validations
    }

    /**
     * Update pin following.
     *
     * Fields that do not require updating can be omitted
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchFollowingsIdTest() throws ApiException {
        UUID id = null;
        PatchFollowRequest patchFollowRequest = null;
        ModelDefault response = api.patchFollowingsId(id, patchFollowRequest);
        // TODO: test validations
    }

    /**
     * Create a new pin following.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFollowingsTest() throws ApiException {
        AddFollowDto addFollowDto = null;
        DefaultWithId response = api.postFollowings(addFollowDto);
        // TODO: test validations
    }

}
