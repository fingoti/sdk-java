/*
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingoti.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.fingoti.sdk.JSON;

/**
 * PatchOrganisationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-16T16:45:33.786096900Z[Europe/London]")
public class PatchOrganisationRequest {
  public static final String SERIALIZED_NAME_ORGANISATION_NAME = "organisationName";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_NAME)
  private String organisationName;

  public static final String SERIALIZED_NAME_VAT_NUMBER = "vatNumber";
  @SerializedName(SERIALIZED_NAME_VAT_NUMBER)
  private String vatNumber;

  public static final String SERIALIZED_NAME_MAIN_CONTACT = "mainContact";
  @SerializedName(SERIALIZED_NAME_MAIN_CONTACT)
  private UUID mainContact;

  public static final String SERIALIZED_NAME_MAIN_ADDRESS = "mainAddress";
  @SerializedName(SERIALIZED_NAME_MAIN_ADDRESS)
  private UUID mainAddress;

  public static final String SERIALIZED_NAME_BILLING_CONTACT = "billingContact";
  @SerializedName(SERIALIZED_NAME_BILLING_CONTACT)
  private UUID billingContact;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "billingAddress";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private UUID billingAddress;

  public static final String SERIALIZED_NAME_DELIVERY_CONTACT = "deliveryContact";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CONTACT)
  private UUID deliveryContact;

  public static final String SERIALIZED_NAME_DELIVERY_ADDRESS = "deliveryAddress";
  @SerializedName(SERIALIZED_NAME_DELIVERY_ADDRESS)
  private UUID deliveryAddress;

  public PatchOrganisationRequest() {
  }

  public PatchOrganisationRequest organisationName(String organisationName) {
    
    this.organisationName = organisationName;
    return this;
  }

   /**
   * Get organisationName
   * @return organisationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganisationName() {
    return organisationName;
  }


  public void setOrganisationName(String organisationName) {
    this.organisationName = organisationName;
  }


  public PatchOrganisationRequest vatNumber(String vatNumber) {
    
    this.vatNumber = vatNumber;
    return this;
  }

   /**
   * Get vatNumber
   * @return vatNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVatNumber() {
    return vatNumber;
  }


  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }


  public PatchOrganisationRequest mainContact(UUID mainContact) {
    
    this.mainContact = mainContact;
    return this;
  }

   /**
   * Get mainContact
   * @return mainContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getMainContact() {
    return mainContact;
  }


  public void setMainContact(UUID mainContact) {
    this.mainContact = mainContact;
  }


  public PatchOrganisationRequest mainAddress(UUID mainAddress) {
    
    this.mainAddress = mainAddress;
    return this;
  }

   /**
   * Get mainAddress
   * @return mainAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getMainAddress() {
    return mainAddress;
  }


  public void setMainAddress(UUID mainAddress) {
    this.mainAddress = mainAddress;
  }


  public PatchOrganisationRequest billingContact(UUID billingContact) {
    
    this.billingContact = billingContact;
    return this;
  }

   /**
   * Get billingContact
   * @return billingContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getBillingContact() {
    return billingContact;
  }


  public void setBillingContact(UUID billingContact) {
    this.billingContact = billingContact;
  }


  public PatchOrganisationRequest billingAddress(UUID billingAddress) {
    
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getBillingAddress() {
    return billingAddress;
  }


  public void setBillingAddress(UUID billingAddress) {
    this.billingAddress = billingAddress;
  }


  public PatchOrganisationRequest deliveryContact(UUID deliveryContact) {
    
    this.deliveryContact = deliveryContact;
    return this;
  }

   /**
   * Get deliveryContact
   * @return deliveryContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getDeliveryContact() {
    return deliveryContact;
  }


  public void setDeliveryContact(UUID deliveryContact) {
    this.deliveryContact = deliveryContact;
  }


  public PatchOrganisationRequest deliveryAddress(UUID deliveryAddress) {
    
    this.deliveryAddress = deliveryAddress;
    return this;
  }

   /**
   * Get deliveryAddress
   * @return deliveryAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getDeliveryAddress() {
    return deliveryAddress;
  }


  public void setDeliveryAddress(UUID deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchOrganisationRequest patchOrganisationRequest = (PatchOrganisationRequest) o;
    return Objects.equals(this.organisationName, patchOrganisationRequest.organisationName) &&
        Objects.equals(this.vatNumber, patchOrganisationRequest.vatNumber) &&
        Objects.equals(this.mainContact, patchOrganisationRequest.mainContact) &&
        Objects.equals(this.mainAddress, patchOrganisationRequest.mainAddress) &&
        Objects.equals(this.billingContact, patchOrganisationRequest.billingContact) &&
        Objects.equals(this.billingAddress, patchOrganisationRequest.billingAddress) &&
        Objects.equals(this.deliveryContact, patchOrganisationRequest.deliveryContact) &&
        Objects.equals(this.deliveryAddress, patchOrganisationRequest.deliveryAddress);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(organisationName, vatNumber, mainContact, mainAddress, billingContact, billingAddress, deliveryContact, deliveryAddress);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchOrganisationRequest {\n");
    sb.append("    organisationName: ").append(toIndentedString(organisationName)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    mainContact: ").append(toIndentedString(mainContact)).append("\n");
    sb.append("    mainAddress: ").append(toIndentedString(mainAddress)).append("\n");
    sb.append("    billingContact: ").append(toIndentedString(billingContact)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    deliveryContact: ").append(toIndentedString(deliveryContact)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("organisationName");
    openapiFields.add("vatNumber");
    openapiFields.add("mainContact");
    openapiFields.add("mainAddress");
    openapiFields.add("billingContact");
    openapiFields.add("billingAddress");
    openapiFields.add("deliveryContact");
    openapiFields.add("deliveryAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PatchOrganisationRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PatchOrganisationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PatchOrganisationRequest is not found in the empty JSON string", PatchOrganisationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PatchOrganisationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PatchOrganisationRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("organisationName") != null && !jsonObj.get("organisationName").isJsonNull()) && !jsonObj.get("organisationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisationName").toString()));
      }
      if ((jsonObj.get("vatNumber") != null && !jsonObj.get("vatNumber").isJsonNull()) && !jsonObj.get("vatNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vatNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vatNumber").toString()));
      }
      if ((jsonObj.get("mainContact") != null && !jsonObj.get("mainContact").isJsonNull()) && !jsonObj.get("mainContact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mainContact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mainContact").toString()));
      }
      if ((jsonObj.get("mainAddress") != null && !jsonObj.get("mainAddress").isJsonNull()) && !jsonObj.get("mainAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mainAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mainAddress").toString()));
      }
      if ((jsonObj.get("billingContact") != null && !jsonObj.get("billingContact").isJsonNull()) && !jsonObj.get("billingContact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingContact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingContact").toString()));
      }
      if ((jsonObj.get("billingAddress") != null && !jsonObj.get("billingAddress").isJsonNull()) && !jsonObj.get("billingAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingAddress").toString()));
      }
      if ((jsonObj.get("deliveryContact") != null && !jsonObj.get("deliveryContact").isJsonNull()) && !jsonObj.get("deliveryContact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryContact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryContact").toString()));
      }
      if ((jsonObj.get("deliveryAddress") != null && !jsonObj.get("deliveryAddress").isJsonNull()) && !jsonObj.get("deliveryAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryAddress").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PatchOrganisationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PatchOrganisationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PatchOrganisationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PatchOrganisationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PatchOrganisationRequest>() {
           @Override
           public void write(JsonWriter out, PatchOrganisationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PatchOrganisationRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PatchOrganisationRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PatchOrganisationRequest
  * @throws IOException if the JSON string is invalid with respect to PatchOrganisationRequest
  */
  public static PatchOrganisationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PatchOrganisationRequest.class);
  }

 /**
  * Convert an instance of PatchOrganisationRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

