/*
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingoti.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.fingoti.sdk.JSON;

/**
 * UsageTracking
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-16T16:45:33.786096900Z[Europe/London]")
public class UsageTracking {
  public static final String SERIALIZED_NAME_USAGE_ID = "usageId";
  @SerializedName(SERIALIZED_NAME_USAGE_ID)
  private UUID usageId;

  public static final String SERIALIZED_NAME_ORGANISATION_ID = "organisationId";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_ID)
  private UUID organisationId;

  public static final String SERIALIZED_NAME_DAY = "day";
  @SerializedName(SERIALIZED_NAME_DAY)
  private OffsetDateTime day;

  public static final String SERIALIZED_NAME_DEVICE_ID = "deviceId";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public static final String SERIALIZED_NAME_UNKNOWN = "unknown";
  @SerializedName(SERIALIZED_NAME_UNKNOWN)
  private Integer unknown;

  public static final String SERIALIZED_NAME_DEVICE_ACTIVITY = "deviceActivity";
  @SerializedName(SERIALIZED_NAME_DEVICE_ACTIVITY)
  private Integer deviceActivity;

  public static final String SERIALIZED_NAME_DEVICE_BALANCE = "deviceBalance";
  @SerializedName(SERIALIZED_NAME_DEVICE_BALANCE)
  private Integer deviceBalance;

  public static final String SERIALIZED_NAME_DEVICE_BLINK = "deviceBlink";
  @SerializedName(SERIALIZED_NAME_DEVICE_BLINK)
  private Integer deviceBlink;

  public static final String SERIALIZED_NAME_DEVICE_BRIGHTNESS = "deviceBrightness";
  @SerializedName(SERIALIZED_NAME_DEVICE_BRIGHTNESS)
  private Integer deviceBrightness;

  public static final String SERIALIZED_NAME_DEVICE_BUS = "deviceBus";
  @SerializedName(SERIALIZED_NAME_DEVICE_BUS)
  private Integer deviceBus;

  public static final String SERIALIZED_NAME_DEVICE_CLAIM = "deviceClaim";
  @SerializedName(SERIALIZED_NAME_DEVICE_CLAIM)
  private Integer deviceClaim;

  public static final String SERIALIZED_NAME_DEVICE_CLOUD = "deviceCloud";
  @SerializedName(SERIALIZED_NAME_DEVICE_CLOUD)
  private Integer deviceCloud;

  public static final String SERIALIZED_NAME_DEVICE_COLOUR = "deviceColour";
  @SerializedName(SERIALIZED_NAME_DEVICE_COLOUR)
  private Integer deviceColour;

  public static final String SERIALIZED_NAME_DEVICE_FACTORY = "deviceFactory";
  @SerializedName(SERIALIZED_NAME_DEVICE_FACTORY)
  private Integer deviceFactory;

  public static final String SERIALIZED_NAME_DEVICE_INFORMATION = "deviceInformation";
  @SerializedName(SERIALIZED_NAME_DEVICE_INFORMATION)
  private Integer deviceInformation;

  public static final String SERIALIZED_NAME_DEVICE_KEY = "deviceKey";
  @SerializedName(SERIALIZED_NAME_DEVICE_KEY)
  private Integer deviceKey;

  public static final String SERIALIZED_NAME_DEVICE_POKE = "devicePoke";
  @SerializedName(SERIALIZED_NAME_DEVICE_POKE)
  private Integer devicePoke;

  public static final String SERIALIZED_NAME_DEVICE_POWER = "devicePower";
  @SerializedName(SERIALIZED_NAME_DEVICE_POWER)
  private Integer devicePower;

  public static final String SERIALIZED_NAME_DEVICE_SERIAL = "deviceSerial";
  @SerializedName(SERIALIZED_NAME_DEVICE_SERIAL)
  private Integer deviceSerial;

  public static final String SERIALIZED_NAME_DEVICE_SETUP = "deviceSetup";
  @SerializedName(SERIALIZED_NAME_DEVICE_SETUP)
  private Integer deviceSetup;

  public static final String SERIALIZED_NAME_DEVICE_SLEEP = "deviceSleep";
  @SerializedName(SERIALIZED_NAME_DEVICE_SLEEP)
  private Integer deviceSleep;

  public static final String SERIALIZED_NAME_DEVICE_TEMPERATURE = "deviceTemperature";
  @SerializedName(SERIALIZED_NAME_DEVICE_TEMPERATURE)
  private Integer deviceTemperature;

  public static final String SERIALIZED_NAME_DEVICE_TIME = "deviceTime";
  @SerializedName(SERIALIZED_NAME_DEVICE_TIME)
  private Integer deviceTime;

  public static final String SERIALIZED_NAME_DEVICE_UPDATE = "deviceUpdate";
  @SerializedName(SERIALIZED_NAME_DEVICE_UPDATE)
  private Integer deviceUpdate;

  public static final String SERIALIZED_NAME_DEVICE_UPTIME = "deviceUptime";
  @SerializedName(SERIALIZED_NAME_DEVICE_UPTIME)
  private Integer deviceUptime;

  public static final String SERIALIZED_NAME_DEVICE_VERSION = "deviceVersion";
  @SerializedName(SERIALIZED_NAME_DEVICE_VERSION)
  private Integer deviceVersion;

  public static final String SERIALIZED_NAME_NETWORK_TRAFFIC = "networkTraffic";
  @SerializedName(SERIALIZED_NAME_NETWORK_TRAFFIC)
  private Integer networkTraffic;

  public static final String SERIALIZED_NAME_NETWORK_INTERNET = "networkInternet";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERNET)
  private Integer networkInternet;

  public static final String SERIALIZED_NAME_NETWORK_IP = "networkIp";
  @SerializedName(SERIALIZED_NAME_NETWORK_IP)
  private Integer networkIp;

  public static final String SERIALIZED_NAME_NETWORK_MAC = "networkMac";
  @SerializedName(SERIALIZED_NAME_NETWORK_MAC)
  private Integer networkMac;

  public static final String SERIALIZED_NAME_I2C_DATA = "i2cData";
  @SerializedName(SERIALIZED_NAME_I2C_DATA)
  private Integer i2cData;

  public static final String SERIALIZED_NAME_I2C_DETECT = "i2cDetect";
  @SerializedName(SERIALIZED_NAME_I2C_DETECT)
  private Integer i2cDetect;

  public static final String SERIALIZED_NAME_I2C_SETUP = "i2cSetup";
  @SerializedName(SERIALIZED_NAME_I2C_SETUP)
  private Integer i2cSetup;

  public static final String SERIALIZED_NAME_GPIO_DIRECTION = "gpioDirection";
  @SerializedName(SERIALIZED_NAME_GPIO_DIRECTION)
  private Integer gpioDirection;

  public static final String SERIALIZED_NAME_GPIO_PULSE = "gpioPulse";
  @SerializedName(SERIALIZED_NAME_GPIO_PULSE)
  private Integer gpioPulse;

  public static final String SERIALIZED_NAME_GPIO_STATE = "gpioState";
  @SerializedName(SERIALIZED_NAME_GPIO_STATE)
  private Integer gpioState;

  public static final String SERIALIZED_NAME_GPIO_TOGGLE = "gpioToggle";
  @SerializedName(SERIALIZED_NAME_GPIO_TOGGLE)
  private Integer gpioToggle;

  public static final String SERIALIZED_NAME_TIMER_INTERVAL = "timerInterval";
  @SerializedName(SERIALIZED_NAME_TIMER_INTERVAL)
  private Integer timerInterval;

  public static final String SERIALIZED_NAME_TIMER_REQUEST = "timerRequest";
  @SerializedName(SERIALIZED_NAME_TIMER_REQUEST)
  private Integer timerRequest;

  public static final String SERIALIZED_NAME_TIMER_STATUS = "timerStatus";
  @SerializedName(SERIALIZED_NAME_TIMER_STATUS)
  private Integer timerStatus;

  public static final String SERIALIZED_NAME_WIFI_CREDENTIALS = "wifiCredentials";
  @SerializedName(SERIALIZED_NAME_WIFI_CREDENTIALS)
  private Integer wifiCredentials;

  public static final String SERIALIZED_NAME_WIFI_DETECT = "wifiDetect";
  @SerializedName(SERIALIZED_NAME_WIFI_DETECT)
  private Integer wifiDetect;

  public static final String SERIALIZED_NAME_WIFI_STATUS = "wifiStatus";
  @SerializedName(SERIALIZED_NAME_WIFI_STATUS)
  private Integer wifiStatus;

  public static final String SERIALIZED_NAME_UART_DATA = "uartData";
  @SerializedName(SERIALIZED_NAME_UART_DATA)
  private Integer uartData;

  public static final String SERIALIZED_NAME_UART_MODE = "uartMode";
  @SerializedName(SERIALIZED_NAME_UART_MODE)
  private Integer uartMode;

  public static final String SERIALIZED_NAME_UART_SESSION = "uartSession";
  @SerializedName(SERIALIZED_NAME_UART_SESSION)
  private Integer uartSession;

  public static final String SERIALIZED_NAME_UART_SETUP = "uartSetup";
  @SerializedName(SERIALIZED_NAME_UART_SETUP)
  private Integer uartSetup;

  public static final String SERIALIZED_NAME_UART_TRIGGER = "uartTrigger";
  @SerializedName(SERIALIZED_NAME_UART_TRIGGER)
  private Integer uartTrigger;

  public static final String SERIALIZED_NAME_SCHEDULE_CRON = "scheduleCron";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CRON)
  private Integer scheduleCron;

  public static final String SERIALIZED_NAME_SCHEDULE_REQUEST = "scheduleRequest";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_REQUEST)
  private Integer scheduleRequest;

  public static final String SERIALIZED_NAME_SCHEDULE_SETUP = "scheduleSetup";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_SETUP)
  private Integer scheduleSetup;

  public static final String SERIALIZED_NAME_SCHEDULE_STATUS = "scheduleStatus";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_STATUS)
  private Integer scheduleStatus;

  public static final String SERIALIZED_NAME_MQTT_CERTIFICATE = "mqttCertificate";
  @SerializedName(SERIALIZED_NAME_MQTT_CERTIFICATE)
  private Integer mqttCertificate;

  public static final String SERIALIZED_NAME_MQTT_SESSION = "mqttSession";
  @SerializedName(SERIALIZED_NAME_MQTT_SESSION)
  private Integer mqttSession;

  public static final String SERIALIZED_NAME_MQTT_SETUP = "mqttSetup";
  @SerializedName(SERIALIZED_NAME_MQTT_SETUP)
  private Integer mqttSetup;

  public static final String SERIALIZED_NAME_MQTT_STATUS = "mqttStatus";
  @SerializedName(SERIALIZED_NAME_MQTT_STATUS)
  private Integer mqttStatus;

  public static final String SERIALIZED_NAME_NODE_ADDRESS = "nodeAddress";
  @SerializedName(SERIALIZED_NAME_NODE_ADDRESS)
  private Integer nodeAddress;

  public static final String SERIALIZED_NAME_NODE_DATA = "nodeData";
  @SerializedName(SERIALIZED_NAME_NODE_DATA)
  private Integer nodeData;

  public static final String SERIALIZED_NAME_NODE_DETECT = "nodeDetect";
  @SerializedName(SERIALIZED_NAME_NODE_DETECT)
  private Integer nodeDetect;

  public static final String SERIALIZED_NAME_NODE_ENABLE = "nodeEnable";
  @SerializedName(SERIALIZED_NAME_NODE_ENABLE)
  private Integer nodeEnable;

  public static final String SERIALIZED_NAME_NODE_IDENTIFY = "nodeIdentify";
  @SerializedName(SERIALIZED_NAME_NODE_IDENTIFY)
  private Integer nodeIdentify;

  public static final String SERIALIZED_NAME_NODE_INFORMATION = "nodeInformation";
  @SerializedName(SERIALIZED_NAME_NODE_INFORMATION)
  private Integer nodeInformation;

  public static final String SERIALIZED_NAME_NODE_LATCH = "nodeLatch";
  @SerializedName(SERIALIZED_NAME_NODE_LATCH)
  private Integer nodeLatch;

  public static final String SERIALIZED_NAME_NODE_POWER = "nodePower";
  @SerializedName(SERIALIZED_NAME_NODE_POWER)
  private Integer nodePower;

  public static final String SERIALIZED_NAME_NODE_SETUP = "nodeSetup";
  @SerializedName(SERIALIZED_NAME_NODE_SETUP)
  private Integer nodeSetup;

  public UsageTracking() {
  }

  public UsageTracking usageId(UUID usageId) {
    
    this.usageId = usageId;
    return this;
  }

   /**
   * Get usageId
   * @return usageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getUsageId() {
    return usageId;
  }


  public void setUsageId(UUID usageId) {
    this.usageId = usageId;
  }


  public UsageTracking organisationId(UUID organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

   /**
   * Get organisationId
   * @return organisationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getOrganisationId() {
    return organisationId;
  }


  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }


  public UsageTracking day(OffsetDateTime day) {
    
    this.day = day;
    return this;
  }

   /**
   * Get day
   * @return day
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDay() {
    return day;
  }


  public void setDay(OffsetDateTime day) {
    this.day = day;
  }


  public UsageTracking deviceId(String deviceId) {
    
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Get deviceId
   * @return deviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeviceId() {
    return deviceId;
  }


  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public UsageTracking total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotal() {
    return total;
  }


  public void setTotal(Integer total) {
    this.total = total;
  }


  public UsageTracking unknown(Integer unknown) {
    
    this.unknown = unknown;
    return this;
  }

   /**
   * Get unknown
   * @return unknown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUnknown() {
    return unknown;
  }


  public void setUnknown(Integer unknown) {
    this.unknown = unknown;
  }


  public UsageTracking deviceActivity(Integer deviceActivity) {
    
    this.deviceActivity = deviceActivity;
    return this;
  }

   /**
   * Get deviceActivity
   * @return deviceActivity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceActivity() {
    return deviceActivity;
  }


  public void setDeviceActivity(Integer deviceActivity) {
    this.deviceActivity = deviceActivity;
  }


  public UsageTracking deviceBalance(Integer deviceBalance) {
    
    this.deviceBalance = deviceBalance;
    return this;
  }

   /**
   * Get deviceBalance
   * @return deviceBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceBalance() {
    return deviceBalance;
  }


  public void setDeviceBalance(Integer deviceBalance) {
    this.deviceBalance = deviceBalance;
  }


  public UsageTracking deviceBlink(Integer deviceBlink) {
    
    this.deviceBlink = deviceBlink;
    return this;
  }

   /**
   * Get deviceBlink
   * @return deviceBlink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceBlink() {
    return deviceBlink;
  }


  public void setDeviceBlink(Integer deviceBlink) {
    this.deviceBlink = deviceBlink;
  }


  public UsageTracking deviceBrightness(Integer deviceBrightness) {
    
    this.deviceBrightness = deviceBrightness;
    return this;
  }

   /**
   * Get deviceBrightness
   * @return deviceBrightness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceBrightness() {
    return deviceBrightness;
  }


  public void setDeviceBrightness(Integer deviceBrightness) {
    this.deviceBrightness = deviceBrightness;
  }


  public UsageTracking deviceBus(Integer deviceBus) {
    
    this.deviceBus = deviceBus;
    return this;
  }

   /**
   * Get deviceBus
   * @return deviceBus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceBus() {
    return deviceBus;
  }


  public void setDeviceBus(Integer deviceBus) {
    this.deviceBus = deviceBus;
  }


  public UsageTracking deviceClaim(Integer deviceClaim) {
    
    this.deviceClaim = deviceClaim;
    return this;
  }

   /**
   * Get deviceClaim
   * @return deviceClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceClaim() {
    return deviceClaim;
  }


  public void setDeviceClaim(Integer deviceClaim) {
    this.deviceClaim = deviceClaim;
  }


  public UsageTracking deviceCloud(Integer deviceCloud) {
    
    this.deviceCloud = deviceCloud;
    return this;
  }

   /**
   * Get deviceCloud
   * @return deviceCloud
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceCloud() {
    return deviceCloud;
  }


  public void setDeviceCloud(Integer deviceCloud) {
    this.deviceCloud = deviceCloud;
  }


  public UsageTracking deviceColour(Integer deviceColour) {
    
    this.deviceColour = deviceColour;
    return this;
  }

   /**
   * Get deviceColour
   * @return deviceColour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceColour() {
    return deviceColour;
  }


  public void setDeviceColour(Integer deviceColour) {
    this.deviceColour = deviceColour;
  }


  public UsageTracking deviceFactory(Integer deviceFactory) {
    
    this.deviceFactory = deviceFactory;
    return this;
  }

   /**
   * Get deviceFactory
   * @return deviceFactory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceFactory() {
    return deviceFactory;
  }


  public void setDeviceFactory(Integer deviceFactory) {
    this.deviceFactory = deviceFactory;
  }


  public UsageTracking deviceInformation(Integer deviceInformation) {
    
    this.deviceInformation = deviceInformation;
    return this;
  }

   /**
   * Get deviceInformation
   * @return deviceInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceInformation() {
    return deviceInformation;
  }


  public void setDeviceInformation(Integer deviceInformation) {
    this.deviceInformation = deviceInformation;
  }


  public UsageTracking deviceKey(Integer deviceKey) {
    
    this.deviceKey = deviceKey;
    return this;
  }

   /**
   * Get deviceKey
   * @return deviceKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceKey() {
    return deviceKey;
  }


  public void setDeviceKey(Integer deviceKey) {
    this.deviceKey = deviceKey;
  }


  public UsageTracking devicePoke(Integer devicePoke) {
    
    this.devicePoke = devicePoke;
    return this;
  }

   /**
   * Get devicePoke
   * @return devicePoke
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDevicePoke() {
    return devicePoke;
  }


  public void setDevicePoke(Integer devicePoke) {
    this.devicePoke = devicePoke;
  }


  public UsageTracking devicePower(Integer devicePower) {
    
    this.devicePower = devicePower;
    return this;
  }

   /**
   * Get devicePower
   * @return devicePower
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDevicePower() {
    return devicePower;
  }


  public void setDevicePower(Integer devicePower) {
    this.devicePower = devicePower;
  }


  public UsageTracking deviceSerial(Integer deviceSerial) {
    
    this.deviceSerial = deviceSerial;
    return this;
  }

   /**
   * Get deviceSerial
   * @return deviceSerial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceSerial() {
    return deviceSerial;
  }


  public void setDeviceSerial(Integer deviceSerial) {
    this.deviceSerial = deviceSerial;
  }


  public UsageTracking deviceSetup(Integer deviceSetup) {
    
    this.deviceSetup = deviceSetup;
    return this;
  }

   /**
   * Get deviceSetup
   * @return deviceSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceSetup() {
    return deviceSetup;
  }


  public void setDeviceSetup(Integer deviceSetup) {
    this.deviceSetup = deviceSetup;
  }


  public UsageTracking deviceSleep(Integer deviceSleep) {
    
    this.deviceSleep = deviceSleep;
    return this;
  }

   /**
   * Get deviceSleep
   * @return deviceSleep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceSleep() {
    return deviceSleep;
  }


  public void setDeviceSleep(Integer deviceSleep) {
    this.deviceSleep = deviceSleep;
  }


  public UsageTracking deviceTemperature(Integer deviceTemperature) {
    
    this.deviceTemperature = deviceTemperature;
    return this;
  }

   /**
   * Get deviceTemperature
   * @return deviceTemperature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceTemperature() {
    return deviceTemperature;
  }


  public void setDeviceTemperature(Integer deviceTemperature) {
    this.deviceTemperature = deviceTemperature;
  }


  public UsageTracking deviceTime(Integer deviceTime) {
    
    this.deviceTime = deviceTime;
    return this;
  }

   /**
   * Get deviceTime
   * @return deviceTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceTime() {
    return deviceTime;
  }


  public void setDeviceTime(Integer deviceTime) {
    this.deviceTime = deviceTime;
  }


  public UsageTracking deviceUpdate(Integer deviceUpdate) {
    
    this.deviceUpdate = deviceUpdate;
    return this;
  }

   /**
   * Get deviceUpdate
   * @return deviceUpdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceUpdate() {
    return deviceUpdate;
  }


  public void setDeviceUpdate(Integer deviceUpdate) {
    this.deviceUpdate = deviceUpdate;
  }


  public UsageTracking deviceUptime(Integer deviceUptime) {
    
    this.deviceUptime = deviceUptime;
    return this;
  }

   /**
   * Get deviceUptime
   * @return deviceUptime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceUptime() {
    return deviceUptime;
  }


  public void setDeviceUptime(Integer deviceUptime) {
    this.deviceUptime = deviceUptime;
  }


  public UsageTracking deviceVersion(Integer deviceVersion) {
    
    this.deviceVersion = deviceVersion;
    return this;
  }

   /**
   * Get deviceVersion
   * @return deviceVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeviceVersion() {
    return deviceVersion;
  }


  public void setDeviceVersion(Integer deviceVersion) {
    this.deviceVersion = deviceVersion;
  }


  public UsageTracking networkTraffic(Integer networkTraffic) {
    
    this.networkTraffic = networkTraffic;
    return this;
  }

   /**
   * Get networkTraffic
   * @return networkTraffic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNetworkTraffic() {
    return networkTraffic;
  }


  public void setNetworkTraffic(Integer networkTraffic) {
    this.networkTraffic = networkTraffic;
  }


  public UsageTracking networkInternet(Integer networkInternet) {
    
    this.networkInternet = networkInternet;
    return this;
  }

   /**
   * Get networkInternet
   * @return networkInternet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNetworkInternet() {
    return networkInternet;
  }


  public void setNetworkInternet(Integer networkInternet) {
    this.networkInternet = networkInternet;
  }


  public UsageTracking networkIp(Integer networkIp) {
    
    this.networkIp = networkIp;
    return this;
  }

   /**
   * Get networkIp
   * @return networkIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNetworkIp() {
    return networkIp;
  }


  public void setNetworkIp(Integer networkIp) {
    this.networkIp = networkIp;
  }


  public UsageTracking networkMac(Integer networkMac) {
    
    this.networkMac = networkMac;
    return this;
  }

   /**
   * Get networkMac
   * @return networkMac
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNetworkMac() {
    return networkMac;
  }


  public void setNetworkMac(Integer networkMac) {
    this.networkMac = networkMac;
  }


  public UsageTracking i2cData(Integer i2cData) {
    
    this.i2cData = i2cData;
    return this;
  }

   /**
   * Get i2cData
   * @return i2cData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getI2cData() {
    return i2cData;
  }


  public void setI2cData(Integer i2cData) {
    this.i2cData = i2cData;
  }


  public UsageTracking i2cDetect(Integer i2cDetect) {
    
    this.i2cDetect = i2cDetect;
    return this;
  }

   /**
   * Get i2cDetect
   * @return i2cDetect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getI2cDetect() {
    return i2cDetect;
  }


  public void setI2cDetect(Integer i2cDetect) {
    this.i2cDetect = i2cDetect;
  }


  public UsageTracking i2cSetup(Integer i2cSetup) {
    
    this.i2cSetup = i2cSetup;
    return this;
  }

   /**
   * Get i2cSetup
   * @return i2cSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getI2cSetup() {
    return i2cSetup;
  }


  public void setI2cSetup(Integer i2cSetup) {
    this.i2cSetup = i2cSetup;
  }


  public UsageTracking gpioDirection(Integer gpioDirection) {
    
    this.gpioDirection = gpioDirection;
    return this;
  }

   /**
   * Get gpioDirection
   * @return gpioDirection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGpioDirection() {
    return gpioDirection;
  }


  public void setGpioDirection(Integer gpioDirection) {
    this.gpioDirection = gpioDirection;
  }


  public UsageTracking gpioPulse(Integer gpioPulse) {
    
    this.gpioPulse = gpioPulse;
    return this;
  }

   /**
   * Get gpioPulse
   * @return gpioPulse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGpioPulse() {
    return gpioPulse;
  }


  public void setGpioPulse(Integer gpioPulse) {
    this.gpioPulse = gpioPulse;
  }


  public UsageTracking gpioState(Integer gpioState) {
    
    this.gpioState = gpioState;
    return this;
  }

   /**
   * Get gpioState
   * @return gpioState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGpioState() {
    return gpioState;
  }


  public void setGpioState(Integer gpioState) {
    this.gpioState = gpioState;
  }


  public UsageTracking gpioToggle(Integer gpioToggle) {
    
    this.gpioToggle = gpioToggle;
    return this;
  }

   /**
   * Get gpioToggle
   * @return gpioToggle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGpioToggle() {
    return gpioToggle;
  }


  public void setGpioToggle(Integer gpioToggle) {
    this.gpioToggle = gpioToggle;
  }


  public UsageTracking timerInterval(Integer timerInterval) {
    
    this.timerInterval = timerInterval;
    return this;
  }

   /**
   * Get timerInterval
   * @return timerInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimerInterval() {
    return timerInterval;
  }


  public void setTimerInterval(Integer timerInterval) {
    this.timerInterval = timerInterval;
  }


  public UsageTracking timerRequest(Integer timerRequest) {
    
    this.timerRequest = timerRequest;
    return this;
  }

   /**
   * Get timerRequest
   * @return timerRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimerRequest() {
    return timerRequest;
  }


  public void setTimerRequest(Integer timerRequest) {
    this.timerRequest = timerRequest;
  }


  public UsageTracking timerStatus(Integer timerStatus) {
    
    this.timerStatus = timerStatus;
    return this;
  }

   /**
   * Get timerStatus
   * @return timerStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimerStatus() {
    return timerStatus;
  }


  public void setTimerStatus(Integer timerStatus) {
    this.timerStatus = timerStatus;
  }


  public UsageTracking wifiCredentials(Integer wifiCredentials) {
    
    this.wifiCredentials = wifiCredentials;
    return this;
  }

   /**
   * Get wifiCredentials
   * @return wifiCredentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWifiCredentials() {
    return wifiCredentials;
  }


  public void setWifiCredentials(Integer wifiCredentials) {
    this.wifiCredentials = wifiCredentials;
  }


  public UsageTracking wifiDetect(Integer wifiDetect) {
    
    this.wifiDetect = wifiDetect;
    return this;
  }

   /**
   * Get wifiDetect
   * @return wifiDetect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWifiDetect() {
    return wifiDetect;
  }


  public void setWifiDetect(Integer wifiDetect) {
    this.wifiDetect = wifiDetect;
  }


  public UsageTracking wifiStatus(Integer wifiStatus) {
    
    this.wifiStatus = wifiStatus;
    return this;
  }

   /**
   * Get wifiStatus
   * @return wifiStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWifiStatus() {
    return wifiStatus;
  }


  public void setWifiStatus(Integer wifiStatus) {
    this.wifiStatus = wifiStatus;
  }


  public UsageTracking uartData(Integer uartData) {
    
    this.uartData = uartData;
    return this;
  }

   /**
   * Get uartData
   * @return uartData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUartData() {
    return uartData;
  }


  public void setUartData(Integer uartData) {
    this.uartData = uartData;
  }


  public UsageTracking uartMode(Integer uartMode) {
    
    this.uartMode = uartMode;
    return this;
  }

   /**
   * Get uartMode
   * @return uartMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUartMode() {
    return uartMode;
  }


  public void setUartMode(Integer uartMode) {
    this.uartMode = uartMode;
  }


  public UsageTracking uartSession(Integer uartSession) {
    
    this.uartSession = uartSession;
    return this;
  }

   /**
   * Get uartSession
   * @return uartSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUartSession() {
    return uartSession;
  }


  public void setUartSession(Integer uartSession) {
    this.uartSession = uartSession;
  }


  public UsageTracking uartSetup(Integer uartSetup) {
    
    this.uartSetup = uartSetup;
    return this;
  }

   /**
   * Get uartSetup
   * @return uartSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUartSetup() {
    return uartSetup;
  }


  public void setUartSetup(Integer uartSetup) {
    this.uartSetup = uartSetup;
  }


  public UsageTracking uartTrigger(Integer uartTrigger) {
    
    this.uartTrigger = uartTrigger;
    return this;
  }

   /**
   * Get uartTrigger
   * @return uartTrigger
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUartTrigger() {
    return uartTrigger;
  }


  public void setUartTrigger(Integer uartTrigger) {
    this.uartTrigger = uartTrigger;
  }


  public UsageTracking scheduleCron(Integer scheduleCron) {
    
    this.scheduleCron = scheduleCron;
    return this;
  }

   /**
   * Get scheduleCron
   * @return scheduleCron
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScheduleCron() {
    return scheduleCron;
  }


  public void setScheduleCron(Integer scheduleCron) {
    this.scheduleCron = scheduleCron;
  }


  public UsageTracking scheduleRequest(Integer scheduleRequest) {
    
    this.scheduleRequest = scheduleRequest;
    return this;
  }

   /**
   * Get scheduleRequest
   * @return scheduleRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScheduleRequest() {
    return scheduleRequest;
  }


  public void setScheduleRequest(Integer scheduleRequest) {
    this.scheduleRequest = scheduleRequest;
  }


  public UsageTracking scheduleSetup(Integer scheduleSetup) {
    
    this.scheduleSetup = scheduleSetup;
    return this;
  }

   /**
   * Get scheduleSetup
   * @return scheduleSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScheduleSetup() {
    return scheduleSetup;
  }


  public void setScheduleSetup(Integer scheduleSetup) {
    this.scheduleSetup = scheduleSetup;
  }


  public UsageTracking scheduleStatus(Integer scheduleStatus) {
    
    this.scheduleStatus = scheduleStatus;
    return this;
  }

   /**
   * Get scheduleStatus
   * @return scheduleStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScheduleStatus() {
    return scheduleStatus;
  }


  public void setScheduleStatus(Integer scheduleStatus) {
    this.scheduleStatus = scheduleStatus;
  }


  public UsageTracking mqttCertificate(Integer mqttCertificate) {
    
    this.mqttCertificate = mqttCertificate;
    return this;
  }

   /**
   * Get mqttCertificate
   * @return mqttCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMqttCertificate() {
    return mqttCertificate;
  }


  public void setMqttCertificate(Integer mqttCertificate) {
    this.mqttCertificate = mqttCertificate;
  }


  public UsageTracking mqttSession(Integer mqttSession) {
    
    this.mqttSession = mqttSession;
    return this;
  }

   /**
   * Get mqttSession
   * @return mqttSession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMqttSession() {
    return mqttSession;
  }


  public void setMqttSession(Integer mqttSession) {
    this.mqttSession = mqttSession;
  }


  public UsageTracking mqttSetup(Integer mqttSetup) {
    
    this.mqttSetup = mqttSetup;
    return this;
  }

   /**
   * Get mqttSetup
   * @return mqttSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMqttSetup() {
    return mqttSetup;
  }


  public void setMqttSetup(Integer mqttSetup) {
    this.mqttSetup = mqttSetup;
  }


  public UsageTracking mqttStatus(Integer mqttStatus) {
    
    this.mqttStatus = mqttStatus;
    return this;
  }

   /**
   * Get mqttStatus
   * @return mqttStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMqttStatus() {
    return mqttStatus;
  }


  public void setMqttStatus(Integer mqttStatus) {
    this.mqttStatus = mqttStatus;
  }


  public UsageTracking nodeAddress(Integer nodeAddress) {
    
    this.nodeAddress = nodeAddress;
    return this;
  }

   /**
   * Get nodeAddress
   * @return nodeAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeAddress() {
    return nodeAddress;
  }


  public void setNodeAddress(Integer nodeAddress) {
    this.nodeAddress = nodeAddress;
  }


  public UsageTracking nodeData(Integer nodeData) {
    
    this.nodeData = nodeData;
    return this;
  }

   /**
   * Get nodeData
   * @return nodeData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeData() {
    return nodeData;
  }


  public void setNodeData(Integer nodeData) {
    this.nodeData = nodeData;
  }


  public UsageTracking nodeDetect(Integer nodeDetect) {
    
    this.nodeDetect = nodeDetect;
    return this;
  }

   /**
   * Get nodeDetect
   * @return nodeDetect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeDetect() {
    return nodeDetect;
  }


  public void setNodeDetect(Integer nodeDetect) {
    this.nodeDetect = nodeDetect;
  }


  public UsageTracking nodeEnable(Integer nodeEnable) {
    
    this.nodeEnable = nodeEnable;
    return this;
  }

   /**
   * Get nodeEnable
   * @return nodeEnable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeEnable() {
    return nodeEnable;
  }


  public void setNodeEnable(Integer nodeEnable) {
    this.nodeEnable = nodeEnable;
  }


  public UsageTracking nodeIdentify(Integer nodeIdentify) {
    
    this.nodeIdentify = nodeIdentify;
    return this;
  }

   /**
   * Get nodeIdentify
   * @return nodeIdentify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeIdentify() {
    return nodeIdentify;
  }


  public void setNodeIdentify(Integer nodeIdentify) {
    this.nodeIdentify = nodeIdentify;
  }


  public UsageTracking nodeInformation(Integer nodeInformation) {
    
    this.nodeInformation = nodeInformation;
    return this;
  }

   /**
   * Get nodeInformation
   * @return nodeInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeInformation() {
    return nodeInformation;
  }


  public void setNodeInformation(Integer nodeInformation) {
    this.nodeInformation = nodeInformation;
  }


  public UsageTracking nodeLatch(Integer nodeLatch) {
    
    this.nodeLatch = nodeLatch;
    return this;
  }

   /**
   * Get nodeLatch
   * @return nodeLatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeLatch() {
    return nodeLatch;
  }


  public void setNodeLatch(Integer nodeLatch) {
    this.nodeLatch = nodeLatch;
  }


  public UsageTracking nodePower(Integer nodePower) {
    
    this.nodePower = nodePower;
    return this;
  }

   /**
   * Get nodePower
   * @return nodePower
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodePower() {
    return nodePower;
  }


  public void setNodePower(Integer nodePower) {
    this.nodePower = nodePower;
  }


  public UsageTracking nodeSetup(Integer nodeSetup) {
    
    this.nodeSetup = nodeSetup;
    return this;
  }

   /**
   * Get nodeSetup
   * @return nodeSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeSetup() {
    return nodeSetup;
  }


  public void setNodeSetup(Integer nodeSetup) {
    this.nodeSetup = nodeSetup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageTracking usageTracking = (UsageTracking) o;
    return Objects.equals(this.usageId, usageTracking.usageId) &&
        Objects.equals(this.organisationId, usageTracking.organisationId) &&
        Objects.equals(this.day, usageTracking.day) &&
        Objects.equals(this.deviceId, usageTracking.deviceId) &&
        Objects.equals(this.total, usageTracking.total) &&
        Objects.equals(this.unknown, usageTracking.unknown) &&
        Objects.equals(this.deviceActivity, usageTracking.deviceActivity) &&
        Objects.equals(this.deviceBalance, usageTracking.deviceBalance) &&
        Objects.equals(this.deviceBlink, usageTracking.deviceBlink) &&
        Objects.equals(this.deviceBrightness, usageTracking.deviceBrightness) &&
        Objects.equals(this.deviceBus, usageTracking.deviceBus) &&
        Objects.equals(this.deviceClaim, usageTracking.deviceClaim) &&
        Objects.equals(this.deviceCloud, usageTracking.deviceCloud) &&
        Objects.equals(this.deviceColour, usageTracking.deviceColour) &&
        Objects.equals(this.deviceFactory, usageTracking.deviceFactory) &&
        Objects.equals(this.deviceInformation, usageTracking.deviceInformation) &&
        Objects.equals(this.deviceKey, usageTracking.deviceKey) &&
        Objects.equals(this.devicePoke, usageTracking.devicePoke) &&
        Objects.equals(this.devicePower, usageTracking.devicePower) &&
        Objects.equals(this.deviceSerial, usageTracking.deviceSerial) &&
        Objects.equals(this.deviceSetup, usageTracking.deviceSetup) &&
        Objects.equals(this.deviceSleep, usageTracking.deviceSleep) &&
        Objects.equals(this.deviceTemperature, usageTracking.deviceTemperature) &&
        Objects.equals(this.deviceTime, usageTracking.deviceTime) &&
        Objects.equals(this.deviceUpdate, usageTracking.deviceUpdate) &&
        Objects.equals(this.deviceUptime, usageTracking.deviceUptime) &&
        Objects.equals(this.deviceVersion, usageTracking.deviceVersion) &&
        Objects.equals(this.networkTraffic, usageTracking.networkTraffic) &&
        Objects.equals(this.networkInternet, usageTracking.networkInternet) &&
        Objects.equals(this.networkIp, usageTracking.networkIp) &&
        Objects.equals(this.networkMac, usageTracking.networkMac) &&
        Objects.equals(this.i2cData, usageTracking.i2cData) &&
        Objects.equals(this.i2cDetect, usageTracking.i2cDetect) &&
        Objects.equals(this.i2cSetup, usageTracking.i2cSetup) &&
        Objects.equals(this.gpioDirection, usageTracking.gpioDirection) &&
        Objects.equals(this.gpioPulse, usageTracking.gpioPulse) &&
        Objects.equals(this.gpioState, usageTracking.gpioState) &&
        Objects.equals(this.gpioToggle, usageTracking.gpioToggle) &&
        Objects.equals(this.timerInterval, usageTracking.timerInterval) &&
        Objects.equals(this.timerRequest, usageTracking.timerRequest) &&
        Objects.equals(this.timerStatus, usageTracking.timerStatus) &&
        Objects.equals(this.wifiCredentials, usageTracking.wifiCredentials) &&
        Objects.equals(this.wifiDetect, usageTracking.wifiDetect) &&
        Objects.equals(this.wifiStatus, usageTracking.wifiStatus) &&
        Objects.equals(this.uartData, usageTracking.uartData) &&
        Objects.equals(this.uartMode, usageTracking.uartMode) &&
        Objects.equals(this.uartSession, usageTracking.uartSession) &&
        Objects.equals(this.uartSetup, usageTracking.uartSetup) &&
        Objects.equals(this.uartTrigger, usageTracking.uartTrigger) &&
        Objects.equals(this.scheduleCron, usageTracking.scheduleCron) &&
        Objects.equals(this.scheduleRequest, usageTracking.scheduleRequest) &&
        Objects.equals(this.scheduleSetup, usageTracking.scheduleSetup) &&
        Objects.equals(this.scheduleStatus, usageTracking.scheduleStatus) &&
        Objects.equals(this.mqttCertificate, usageTracking.mqttCertificate) &&
        Objects.equals(this.mqttSession, usageTracking.mqttSession) &&
        Objects.equals(this.mqttSetup, usageTracking.mqttSetup) &&
        Objects.equals(this.mqttStatus, usageTracking.mqttStatus) &&
        Objects.equals(this.nodeAddress, usageTracking.nodeAddress) &&
        Objects.equals(this.nodeData, usageTracking.nodeData) &&
        Objects.equals(this.nodeDetect, usageTracking.nodeDetect) &&
        Objects.equals(this.nodeEnable, usageTracking.nodeEnable) &&
        Objects.equals(this.nodeIdentify, usageTracking.nodeIdentify) &&
        Objects.equals(this.nodeInformation, usageTracking.nodeInformation) &&
        Objects.equals(this.nodeLatch, usageTracking.nodeLatch) &&
        Objects.equals(this.nodePower, usageTracking.nodePower) &&
        Objects.equals(this.nodeSetup, usageTracking.nodeSetup);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(usageId, organisationId, day, deviceId, total, unknown, deviceActivity, deviceBalance, deviceBlink, deviceBrightness, deviceBus, deviceClaim, deviceCloud, deviceColour, deviceFactory, deviceInformation, deviceKey, devicePoke, devicePower, deviceSerial, deviceSetup, deviceSleep, deviceTemperature, deviceTime, deviceUpdate, deviceUptime, deviceVersion, networkTraffic, networkInternet, networkIp, networkMac, i2cData, i2cDetect, i2cSetup, gpioDirection, gpioPulse, gpioState, gpioToggle, timerInterval, timerRequest, timerStatus, wifiCredentials, wifiDetect, wifiStatus, uartData, uartMode, uartSession, uartSetup, uartTrigger, scheduleCron, scheduleRequest, scheduleSetup, scheduleStatus, mqttCertificate, mqttSession, mqttSetup, mqttStatus, nodeAddress, nodeData, nodeDetect, nodeEnable, nodeIdentify, nodeInformation, nodeLatch, nodePower, nodeSetup);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageTracking {\n");
    sb.append("    usageId: ").append(toIndentedString(usageId)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    unknown: ").append(toIndentedString(unknown)).append("\n");
    sb.append("    deviceActivity: ").append(toIndentedString(deviceActivity)).append("\n");
    sb.append("    deviceBalance: ").append(toIndentedString(deviceBalance)).append("\n");
    sb.append("    deviceBlink: ").append(toIndentedString(deviceBlink)).append("\n");
    sb.append("    deviceBrightness: ").append(toIndentedString(deviceBrightness)).append("\n");
    sb.append("    deviceBus: ").append(toIndentedString(deviceBus)).append("\n");
    sb.append("    deviceClaim: ").append(toIndentedString(deviceClaim)).append("\n");
    sb.append("    deviceCloud: ").append(toIndentedString(deviceCloud)).append("\n");
    sb.append("    deviceColour: ").append(toIndentedString(deviceColour)).append("\n");
    sb.append("    deviceFactory: ").append(toIndentedString(deviceFactory)).append("\n");
    sb.append("    deviceInformation: ").append(toIndentedString(deviceInformation)).append("\n");
    sb.append("    deviceKey: ").append(toIndentedString(deviceKey)).append("\n");
    sb.append("    devicePoke: ").append(toIndentedString(devicePoke)).append("\n");
    sb.append("    devicePower: ").append(toIndentedString(devicePower)).append("\n");
    sb.append("    deviceSerial: ").append(toIndentedString(deviceSerial)).append("\n");
    sb.append("    deviceSetup: ").append(toIndentedString(deviceSetup)).append("\n");
    sb.append("    deviceSleep: ").append(toIndentedString(deviceSleep)).append("\n");
    sb.append("    deviceTemperature: ").append(toIndentedString(deviceTemperature)).append("\n");
    sb.append("    deviceTime: ").append(toIndentedString(deviceTime)).append("\n");
    sb.append("    deviceUpdate: ").append(toIndentedString(deviceUpdate)).append("\n");
    sb.append("    deviceUptime: ").append(toIndentedString(deviceUptime)).append("\n");
    sb.append("    deviceVersion: ").append(toIndentedString(deviceVersion)).append("\n");
    sb.append("    networkTraffic: ").append(toIndentedString(networkTraffic)).append("\n");
    sb.append("    networkInternet: ").append(toIndentedString(networkInternet)).append("\n");
    sb.append("    networkIp: ").append(toIndentedString(networkIp)).append("\n");
    sb.append("    networkMac: ").append(toIndentedString(networkMac)).append("\n");
    sb.append("    i2cData: ").append(toIndentedString(i2cData)).append("\n");
    sb.append("    i2cDetect: ").append(toIndentedString(i2cDetect)).append("\n");
    sb.append("    i2cSetup: ").append(toIndentedString(i2cSetup)).append("\n");
    sb.append("    gpioDirection: ").append(toIndentedString(gpioDirection)).append("\n");
    sb.append("    gpioPulse: ").append(toIndentedString(gpioPulse)).append("\n");
    sb.append("    gpioState: ").append(toIndentedString(gpioState)).append("\n");
    sb.append("    gpioToggle: ").append(toIndentedString(gpioToggle)).append("\n");
    sb.append("    timerInterval: ").append(toIndentedString(timerInterval)).append("\n");
    sb.append("    timerRequest: ").append(toIndentedString(timerRequest)).append("\n");
    sb.append("    timerStatus: ").append(toIndentedString(timerStatus)).append("\n");
    sb.append("    wifiCredentials: ").append(toIndentedString(wifiCredentials)).append("\n");
    sb.append("    wifiDetect: ").append(toIndentedString(wifiDetect)).append("\n");
    sb.append("    wifiStatus: ").append(toIndentedString(wifiStatus)).append("\n");
    sb.append("    uartData: ").append(toIndentedString(uartData)).append("\n");
    sb.append("    uartMode: ").append(toIndentedString(uartMode)).append("\n");
    sb.append("    uartSession: ").append(toIndentedString(uartSession)).append("\n");
    sb.append("    uartSetup: ").append(toIndentedString(uartSetup)).append("\n");
    sb.append("    uartTrigger: ").append(toIndentedString(uartTrigger)).append("\n");
    sb.append("    scheduleCron: ").append(toIndentedString(scheduleCron)).append("\n");
    sb.append("    scheduleRequest: ").append(toIndentedString(scheduleRequest)).append("\n");
    sb.append("    scheduleSetup: ").append(toIndentedString(scheduleSetup)).append("\n");
    sb.append("    scheduleStatus: ").append(toIndentedString(scheduleStatus)).append("\n");
    sb.append("    mqttCertificate: ").append(toIndentedString(mqttCertificate)).append("\n");
    sb.append("    mqttSession: ").append(toIndentedString(mqttSession)).append("\n");
    sb.append("    mqttSetup: ").append(toIndentedString(mqttSetup)).append("\n");
    sb.append("    mqttStatus: ").append(toIndentedString(mqttStatus)).append("\n");
    sb.append("    nodeAddress: ").append(toIndentedString(nodeAddress)).append("\n");
    sb.append("    nodeData: ").append(toIndentedString(nodeData)).append("\n");
    sb.append("    nodeDetect: ").append(toIndentedString(nodeDetect)).append("\n");
    sb.append("    nodeEnable: ").append(toIndentedString(nodeEnable)).append("\n");
    sb.append("    nodeIdentify: ").append(toIndentedString(nodeIdentify)).append("\n");
    sb.append("    nodeInformation: ").append(toIndentedString(nodeInformation)).append("\n");
    sb.append("    nodeLatch: ").append(toIndentedString(nodeLatch)).append("\n");
    sb.append("    nodePower: ").append(toIndentedString(nodePower)).append("\n");
    sb.append("    nodeSetup: ").append(toIndentedString(nodeSetup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("usageId");
    openapiFields.add("organisationId");
    openapiFields.add("day");
    openapiFields.add("deviceId");
    openapiFields.add("total");
    openapiFields.add("unknown");
    openapiFields.add("deviceActivity");
    openapiFields.add("deviceBalance");
    openapiFields.add("deviceBlink");
    openapiFields.add("deviceBrightness");
    openapiFields.add("deviceBus");
    openapiFields.add("deviceClaim");
    openapiFields.add("deviceCloud");
    openapiFields.add("deviceColour");
    openapiFields.add("deviceFactory");
    openapiFields.add("deviceInformation");
    openapiFields.add("deviceKey");
    openapiFields.add("devicePoke");
    openapiFields.add("devicePower");
    openapiFields.add("deviceSerial");
    openapiFields.add("deviceSetup");
    openapiFields.add("deviceSleep");
    openapiFields.add("deviceTemperature");
    openapiFields.add("deviceTime");
    openapiFields.add("deviceUpdate");
    openapiFields.add("deviceUptime");
    openapiFields.add("deviceVersion");
    openapiFields.add("networkTraffic");
    openapiFields.add("networkInternet");
    openapiFields.add("networkIp");
    openapiFields.add("networkMac");
    openapiFields.add("i2cData");
    openapiFields.add("i2cDetect");
    openapiFields.add("i2cSetup");
    openapiFields.add("gpioDirection");
    openapiFields.add("gpioPulse");
    openapiFields.add("gpioState");
    openapiFields.add("gpioToggle");
    openapiFields.add("timerInterval");
    openapiFields.add("timerRequest");
    openapiFields.add("timerStatus");
    openapiFields.add("wifiCredentials");
    openapiFields.add("wifiDetect");
    openapiFields.add("wifiStatus");
    openapiFields.add("uartData");
    openapiFields.add("uartMode");
    openapiFields.add("uartSession");
    openapiFields.add("uartSetup");
    openapiFields.add("uartTrigger");
    openapiFields.add("scheduleCron");
    openapiFields.add("scheduleRequest");
    openapiFields.add("scheduleSetup");
    openapiFields.add("scheduleStatus");
    openapiFields.add("mqttCertificate");
    openapiFields.add("mqttSession");
    openapiFields.add("mqttSetup");
    openapiFields.add("mqttStatus");
    openapiFields.add("nodeAddress");
    openapiFields.add("nodeData");
    openapiFields.add("nodeDetect");
    openapiFields.add("nodeEnable");
    openapiFields.add("nodeIdentify");
    openapiFields.add("nodeInformation");
    openapiFields.add("nodeLatch");
    openapiFields.add("nodePower");
    openapiFields.add("nodeSetup");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UsageTracking
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UsageTracking.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsageTracking is not found in the empty JSON string", UsageTracking.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UsageTracking.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UsageTracking` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("usageId") != null && !jsonObj.get("usageId").isJsonNull()) && !jsonObj.get("usageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usageId").toString()));
      }
      if ((jsonObj.get("organisationId") != null && !jsonObj.get("organisationId").isJsonNull()) && !jsonObj.get("organisationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisationId").toString()));
      }
      if ((jsonObj.get("deviceId") != null && !jsonObj.get("deviceId").isJsonNull()) && !jsonObj.get("deviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsageTracking.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsageTracking' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsageTracking> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsageTracking.class));

       return (TypeAdapter<T>) new TypeAdapter<UsageTracking>() {
           @Override
           public void write(JsonWriter out, UsageTracking value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UsageTracking read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsageTracking given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsageTracking
  * @throws IOException if the JSON string is invalid with respect to UsageTracking
  */
  public static UsageTracking fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsageTracking.class);
  }

 /**
  * Convert an instance of UsageTracking to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

