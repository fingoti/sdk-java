/*
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingoti.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fingoti.sdk.models.WebhookCallDto;
import com.fingoti.sdk.models.WebhookHeaders;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.fingoti.sdk.JSON;

/**
 * EngineWebhookDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-16T16:45:33.786096900Z[Europe/London]")
public class EngineWebhookDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_ORGANISATION_ID = "organisationId";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_ID)
  private UUID organisationId;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_WEBHOOK_NUMBER = "webhookNumber";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_NUMBER)
  private String webhookNumber;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UUID createdBy;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private OffsetDateTime createdOn;

  public static final String SERIALIZED_NAME_TRIGGERS = "triggers";
  @SerializedName(SERIALIZED_NAME_TRIGGERS)
  private Integer triggers;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<String> properties = null;

  public static final String SERIALIZED_NAME_WEBHOOK_URL = "webhookUrl";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_URL)
  private String webhookUrl;

  public static final String SERIALIZED_NAME_WEBHOOK_HEADERS = "webhookHeaders";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_HEADERS)
  private List<WebhookHeaders> webhookHeaders = null;

  public static final String SERIALIZED_NAME_DEVICES = "devices";
  @SerializedName(SERIALIZED_NAME_DEVICES)
  private List<String> devices = null;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Long count;

  public static final String SERIALIZED_NAME_PAGE_NUMBER = "pageNumber";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  private Long pageNumber;

  public static final String SERIALIZED_NAME_LAST_CALL = "lastCall";
  @SerializedName(SERIALIZED_NAME_LAST_CALL)
  private OffsetDateTime lastCall;

  public static final String SERIALIZED_NAME_CALLS = "calls";
  @SerializedName(SERIALIZED_NAME_CALLS)
  private List<WebhookCallDto> calls = null;

  public EngineWebhookDto() {
  }

  public EngineWebhookDto id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public EngineWebhookDto organisationId(UUID organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

   /**
   * Get organisationId
   * @return organisationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getOrganisationId() {
    return organisationId;
  }


  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }


  public EngineWebhookDto disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public EngineWebhookDto webhookNumber(String webhookNumber) {
    
    this.webhookNumber = webhookNumber;
    return this;
  }

   /**
   * Get webhookNumber
   * @return webhookNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebhookNumber() {
    return webhookNumber;
  }


  public void setWebhookNumber(String webhookNumber) {
    this.webhookNumber = webhookNumber;
  }


  public EngineWebhookDto createdBy(UUID createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(UUID createdBy) {
    this.createdBy = createdBy;
  }


  public EngineWebhookDto createdOn(OffsetDateTime createdOn) {
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }


  public EngineWebhookDto triggers(Integer triggers) {
    
    this.triggers = triggers;
    return this;
  }

   /**
   * Get triggers
   * @return triggers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTriggers() {
    return triggers;
  }


  public void setTriggers(Integer triggers) {
    this.triggers = triggers;
  }


  public EngineWebhookDto properties(List<String> properties) {
    
    this.properties = properties;
    return this;
  }

  public EngineWebhookDto addPropertiesItem(String propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getProperties() {
    return properties;
  }


  public void setProperties(List<String> properties) {
    this.properties = properties;
  }


  public EngineWebhookDto webhookUrl(String webhookUrl) {
    
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * Get webhookUrl
   * @return webhookUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebhookUrl() {
    return webhookUrl;
  }


  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  public EngineWebhookDto webhookHeaders(List<WebhookHeaders> webhookHeaders) {
    
    this.webhookHeaders = webhookHeaders;
    return this;
  }

  public EngineWebhookDto addWebhookHeadersItem(WebhookHeaders webhookHeadersItem) {
    if (this.webhookHeaders == null) {
      this.webhookHeaders = new ArrayList<>();
    }
    this.webhookHeaders.add(webhookHeadersItem);
    return this;
  }

   /**
   * Get webhookHeaders
   * @return webhookHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<WebhookHeaders> getWebhookHeaders() {
    return webhookHeaders;
  }


  public void setWebhookHeaders(List<WebhookHeaders> webhookHeaders) {
    this.webhookHeaders = webhookHeaders;
  }


  public EngineWebhookDto devices(List<String> devices) {
    
    this.devices = devices;
    return this;
  }

  public EngineWebhookDto addDevicesItem(String devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<>();
    }
    this.devices.add(devicesItem);
    return this;
  }

   /**
   * Get devices
   * @return devices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getDevices() {
    return devices;
  }


  public void setDevices(List<String> devices) {
    this.devices = devices;
  }


  public EngineWebhookDto count(Long count) {
    
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCount() {
    return count;
  }


  public void setCount(Long count) {
    this.count = count;
  }


  public EngineWebhookDto pageNumber(Long pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPageNumber() {
    return pageNumber;
  }


  public void setPageNumber(Long pageNumber) {
    this.pageNumber = pageNumber;
  }


  public EngineWebhookDto lastCall(OffsetDateTime lastCall) {
    
    this.lastCall = lastCall;
    return this;
  }

   /**
   * Get lastCall
   * @return lastCall
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastCall() {
    return lastCall;
  }


  public void setLastCall(OffsetDateTime lastCall) {
    this.lastCall = lastCall;
  }


  public EngineWebhookDto calls(List<WebhookCallDto> calls) {
    
    this.calls = calls;
    return this;
  }

  public EngineWebhookDto addCallsItem(WebhookCallDto callsItem) {
    if (this.calls == null) {
      this.calls = new ArrayList<>();
    }
    this.calls.add(callsItem);
    return this;
  }

   /**
   * Get calls
   * @return calls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<WebhookCallDto> getCalls() {
    return calls;
  }


  public void setCalls(List<WebhookCallDto> calls) {
    this.calls = calls;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EngineWebhookDto engineWebhookDto = (EngineWebhookDto) o;
    return Objects.equals(this.id, engineWebhookDto.id) &&
        Objects.equals(this.organisationId, engineWebhookDto.organisationId) &&
        Objects.equals(this.disabled, engineWebhookDto.disabled) &&
        Objects.equals(this.webhookNumber, engineWebhookDto.webhookNumber) &&
        Objects.equals(this.createdBy, engineWebhookDto.createdBy) &&
        Objects.equals(this.createdOn, engineWebhookDto.createdOn) &&
        Objects.equals(this.triggers, engineWebhookDto.triggers) &&
        Objects.equals(this.properties, engineWebhookDto.properties) &&
        Objects.equals(this.webhookUrl, engineWebhookDto.webhookUrl) &&
        Objects.equals(this.webhookHeaders, engineWebhookDto.webhookHeaders) &&
        Objects.equals(this.devices, engineWebhookDto.devices) &&
        Objects.equals(this.count, engineWebhookDto.count) &&
        Objects.equals(this.pageNumber, engineWebhookDto.pageNumber) &&
        Objects.equals(this.lastCall, engineWebhookDto.lastCall) &&
        Objects.equals(this.calls, engineWebhookDto.calls);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, organisationId, disabled, webhookNumber, createdBy, createdOn, triggers, properties, webhookUrl, webhookHeaders, devices, count, pageNumber, lastCall, calls);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EngineWebhookDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    webhookNumber: ").append(toIndentedString(webhookNumber)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    webhookHeaders: ").append(toIndentedString(webhookHeaders)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    lastCall: ").append(toIndentedString(lastCall)).append("\n");
    sb.append("    calls: ").append(toIndentedString(calls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("organisationId");
    openapiFields.add("disabled");
    openapiFields.add("webhookNumber");
    openapiFields.add("createdBy");
    openapiFields.add("createdOn");
    openapiFields.add("triggers");
    openapiFields.add("properties");
    openapiFields.add("webhookUrl");
    openapiFields.add("webhookHeaders");
    openapiFields.add("devices");
    openapiFields.add("count");
    openapiFields.add("pageNumber");
    openapiFields.add("lastCall");
    openapiFields.add("calls");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EngineWebhookDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EngineWebhookDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EngineWebhookDto is not found in the empty JSON string", EngineWebhookDto.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EngineWebhookDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EngineWebhookDto` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("organisationId") != null && !jsonObj.get("organisationId").isJsonNull()) && !jsonObj.get("organisationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisationId").toString()));
      }
      if ((jsonObj.get("webhookNumber") != null && !jsonObj.get("webhookNumber").isJsonNull()) && !jsonObj.get("webhookNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhookNumber").toString()));
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `properties` to be an array in the JSON string but got `%s`", jsonObj.get("properties").toString()));
      }
      if ((jsonObj.get("webhookUrl") != null && !jsonObj.get("webhookUrl").isJsonNull()) && !jsonObj.get("webhookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhookUrl").toString()));
      }
      if (jsonObj.get("webhookHeaders") != null && !jsonObj.get("webhookHeaders").isJsonNull()) {
        JsonArray jsonArraywebhookHeaders = jsonObj.getAsJsonArray("webhookHeaders");
        if (jsonArraywebhookHeaders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("webhookHeaders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `webhookHeaders` to be an array in the JSON string but got `%s`", jsonObj.get("webhookHeaders").toString()));
          }

          // validate the optional field `webhookHeaders` (array)
          for (int i = 0; i < jsonArraywebhookHeaders.size(); i++) {
            WebhookHeaders.validateJsonObject(jsonArraywebhookHeaders.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("devices") != null && !jsonObj.get("devices").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `devices` to be an array in the JSON string but got `%s`", jsonObj.get("devices").toString()));
      }
      if (jsonObj.get("calls") != null && !jsonObj.get("calls").isJsonNull()) {
        JsonArray jsonArraycalls = jsonObj.getAsJsonArray("calls");
        if (jsonArraycalls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("calls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `calls` to be an array in the JSON string but got `%s`", jsonObj.get("calls").toString()));
          }

          // validate the optional field `calls` (array)
          for (int i = 0; i < jsonArraycalls.size(); i++) {
            WebhookCallDto.validateJsonObject(jsonArraycalls.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EngineWebhookDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EngineWebhookDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EngineWebhookDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EngineWebhookDto.class));

       return (TypeAdapter<T>) new TypeAdapter<EngineWebhookDto>() {
           @Override
           public void write(JsonWriter out, EngineWebhookDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EngineWebhookDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EngineWebhookDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EngineWebhookDto
  * @throws IOException if the JSON string is invalid with respect to EngineWebhookDto
  */
  public static EngineWebhookDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EngineWebhookDto.class);
  }

 /**
  * Convert an instance of EngineWebhookDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

