/*
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingoti.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fingoti.sdk.models.PartnerAddress;
import com.fingoti.sdk.models.PartnerContact;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.fingoti.sdk.JSON;

/**
 * OrganisationPartnerResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-16T16:45:33.786096900Z[Europe/London]")
public class OrganisationPartnerResponse {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_ORGANISATION_NUMBER = "organisationNumber";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_NUMBER)
  private String organisationNumber;

  public static final String SERIALIZED_NAME_ORGANISATION_NAME = "organisationName";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_NAME)
  private String organisationName;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private PartnerAddress address;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private PartnerContact contact;

  public OrganisationPartnerResponse() {
  }

  public OrganisationPartnerResponse success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public OrganisationPartnerResponse organisationNumber(String organisationNumber) {
    
    this.organisationNumber = organisationNumber;
    return this;
  }

   /**
   * Get organisationNumber
   * @return organisationNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganisationNumber() {
    return organisationNumber;
  }


  public void setOrganisationNumber(String organisationNumber) {
    this.organisationNumber = organisationNumber;
  }


  public OrganisationPartnerResponse organisationName(String organisationName) {
    
    this.organisationName = organisationName;
    return this;
  }

   /**
   * Get organisationName
   * @return organisationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganisationName() {
    return organisationName;
  }


  public void setOrganisationName(String organisationName) {
    this.organisationName = organisationName;
  }


  public OrganisationPartnerResponse address(PartnerAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PartnerAddress getAddress() {
    return address;
  }


  public void setAddress(PartnerAddress address) {
    this.address = address;
  }


  public OrganisationPartnerResponse contact(PartnerContact contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PartnerContact getContact() {
    return contact;
  }


  public void setContact(PartnerContact contact) {
    this.contact = contact;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganisationPartnerResponse organisationPartnerResponse = (OrganisationPartnerResponse) o;
    return Objects.equals(this.success, organisationPartnerResponse.success) &&
        Objects.equals(this.organisationNumber, organisationPartnerResponse.organisationNumber) &&
        Objects.equals(this.organisationName, organisationPartnerResponse.organisationName) &&
        Objects.equals(this.address, organisationPartnerResponse.address) &&
        Objects.equals(this.contact, organisationPartnerResponse.contact);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, organisationNumber, organisationName, address, contact);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganisationPartnerResponse {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    organisationNumber: ").append(toIndentedString(organisationNumber)).append("\n");
    sb.append("    organisationName: ").append(toIndentedString(organisationName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("success");
    openapiFields.add("organisationNumber");
    openapiFields.add("organisationName");
    openapiFields.add("address");
    openapiFields.add("contact");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrganisationPartnerResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OrganisationPartnerResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrganisationPartnerResponse is not found in the empty JSON string", OrganisationPartnerResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrganisationPartnerResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrganisationPartnerResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("organisationNumber") != null && !jsonObj.get("organisationNumber").isJsonNull()) && !jsonObj.get("organisationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisationNumber").toString()));
      }
      if ((jsonObj.get("organisationName") != null && !jsonObj.get("organisationName").isJsonNull()) && !jsonObj.get("organisationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisationName").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        PartnerAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      }
      // validate the optional field `contact`
      if (jsonObj.get("contact") != null && !jsonObj.get("contact").isJsonNull()) {
        PartnerContact.validateJsonObject(jsonObj.getAsJsonObject("contact"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrganisationPartnerResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrganisationPartnerResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrganisationPartnerResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrganisationPartnerResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<OrganisationPartnerResponse>() {
           @Override
           public void write(JsonWriter out, OrganisationPartnerResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrganisationPartnerResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrganisationPartnerResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrganisationPartnerResponse
  * @throws IOException if the JSON string is invalid with respect to OrganisationPartnerResponse
  */
  public static OrganisationPartnerResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrganisationPartnerResponse.class);
  }

 /**
  * Convert an instance of OrganisationPartnerResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

