/*
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fingoti.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fingoti.sdk.models.DevicePeblDto;
import com.fingoti.sdk.models.DeviceVyneDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.fingoti.sdk.JSON;

/**
 * ClaimedDevicesDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-16T16:45:33.786096900Z[Europe/London]")
public class ClaimedDevicesDto {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_ORGANISATION_ID = "organisationId";
  @SerializedName(SERIALIZED_NAME_ORGANISATION_ID)
  private UUID organisationId;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_CLAIM_PENDING_COUNT = "claimPendingCount";
  @SerializedName(SERIALIZED_NAME_CLAIM_PENDING_COUNT)
  private Integer claimPendingCount;

  public static final String SERIALIZED_NAME_OWNED_DEVICE_COUNT = "ownedDeviceCount";
  @SerializedName(SERIALIZED_NAME_OWNED_DEVICE_COUNT)
  private Integer ownedDeviceCount;

  public static final String SERIALIZED_NAME_ONLINE_GATEWAYS = "onlineGateways";
  @SerializedName(SERIALIZED_NAME_ONLINE_GATEWAYS)
  private List<String> onlineGateways = null;

  public static final String SERIALIZED_NAME_PEBL = "pebl";
  @SerializedName(SERIALIZED_NAME_PEBL)
  private DevicePeblDto pebl;

  public static final String SERIALIZED_NAME_VYNE = "vyne";
  @SerializedName(SERIALIZED_NAME_VYNE)
  private DeviceVyneDto vyne;

  public ClaimedDevicesDto() {
  }

  
  public ClaimedDevicesDto(
     Integer count
  ) {
    this();
    this.count = count;
  }

  public ClaimedDevicesDto success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public ClaimedDevicesDto organisationId(UUID organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

   /**
   * Get organisationId
   * @return organisationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getOrganisationId() {
    return organisationId;
  }


  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }


  public ClaimedDevicesDto lastUpdated(OffsetDateTime lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }


  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


   /**
   * Get count
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCount() {
    return count;
  }




  public ClaimedDevicesDto claimPendingCount(Integer claimPendingCount) {
    
    this.claimPendingCount = claimPendingCount;
    return this;
  }

   /**
   * Get claimPendingCount
   * @return claimPendingCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getClaimPendingCount() {
    return claimPendingCount;
  }


  public void setClaimPendingCount(Integer claimPendingCount) {
    this.claimPendingCount = claimPendingCount;
  }


  public ClaimedDevicesDto ownedDeviceCount(Integer ownedDeviceCount) {
    
    this.ownedDeviceCount = ownedDeviceCount;
    return this;
  }

   /**
   * Get ownedDeviceCount
   * @return ownedDeviceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOwnedDeviceCount() {
    return ownedDeviceCount;
  }


  public void setOwnedDeviceCount(Integer ownedDeviceCount) {
    this.ownedDeviceCount = ownedDeviceCount;
  }


  public ClaimedDevicesDto onlineGateways(List<String> onlineGateways) {
    
    this.onlineGateways = onlineGateways;
    return this;
  }

  public ClaimedDevicesDto addOnlineGatewaysItem(String onlineGatewaysItem) {
    if (this.onlineGateways == null) {
      this.onlineGateways = new ArrayList<>();
    }
    this.onlineGateways.add(onlineGatewaysItem);
    return this;
  }

   /**
   * Get onlineGateways
   * @return onlineGateways
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getOnlineGateways() {
    return onlineGateways;
  }


  public void setOnlineGateways(List<String> onlineGateways) {
    this.onlineGateways = onlineGateways;
  }


  public ClaimedDevicesDto pebl(DevicePeblDto pebl) {
    
    this.pebl = pebl;
    return this;
  }

   /**
   * Get pebl
   * @return pebl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DevicePeblDto getPebl() {
    return pebl;
  }


  public void setPebl(DevicePeblDto pebl) {
    this.pebl = pebl;
  }


  public ClaimedDevicesDto vyne(DeviceVyneDto vyne) {
    
    this.vyne = vyne;
    return this;
  }

   /**
   * Get vyne
   * @return vyne
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DeviceVyneDto getVyne() {
    return vyne;
  }


  public void setVyne(DeviceVyneDto vyne) {
    this.vyne = vyne;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClaimedDevicesDto claimedDevicesDto = (ClaimedDevicesDto) o;
    return Objects.equals(this.success, claimedDevicesDto.success) &&
        Objects.equals(this.organisationId, claimedDevicesDto.organisationId) &&
        Objects.equals(this.lastUpdated, claimedDevicesDto.lastUpdated) &&
        Objects.equals(this.count, claimedDevicesDto.count) &&
        Objects.equals(this.claimPendingCount, claimedDevicesDto.claimPendingCount) &&
        Objects.equals(this.ownedDeviceCount, claimedDevicesDto.ownedDeviceCount) &&
        Objects.equals(this.onlineGateways, claimedDevicesDto.onlineGateways) &&
        Objects.equals(this.pebl, claimedDevicesDto.pebl) &&
        Objects.equals(this.vyne, claimedDevicesDto.vyne);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, organisationId, lastUpdated, count, claimPendingCount, ownedDeviceCount, onlineGateways, pebl, vyne);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClaimedDevicesDto {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    claimPendingCount: ").append(toIndentedString(claimPendingCount)).append("\n");
    sb.append("    ownedDeviceCount: ").append(toIndentedString(ownedDeviceCount)).append("\n");
    sb.append("    onlineGateways: ").append(toIndentedString(onlineGateways)).append("\n");
    sb.append("    pebl: ").append(toIndentedString(pebl)).append("\n");
    sb.append("    vyne: ").append(toIndentedString(vyne)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("success");
    openapiFields.add("organisationId");
    openapiFields.add("lastUpdated");
    openapiFields.add("count");
    openapiFields.add("claimPendingCount");
    openapiFields.add("ownedDeviceCount");
    openapiFields.add("onlineGateways");
    openapiFields.add("pebl");
    openapiFields.add("vyne");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ClaimedDevicesDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ClaimedDevicesDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClaimedDevicesDto is not found in the empty JSON string", ClaimedDevicesDto.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ClaimedDevicesDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClaimedDevicesDto` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("organisationId") != null && !jsonObj.get("organisationId").isJsonNull()) && !jsonObj.get("organisationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organisationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organisationId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("onlineGateways") != null && !jsonObj.get("onlineGateways").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `onlineGateways` to be an array in the JSON string but got `%s`", jsonObj.get("onlineGateways").toString()));
      }
      // validate the optional field `pebl`
      if (jsonObj.get("pebl") != null && !jsonObj.get("pebl").isJsonNull()) {
        DevicePeblDto.validateJsonObject(jsonObj.getAsJsonObject("pebl"));
      }
      // validate the optional field `vyne`
      if (jsonObj.get("vyne") != null && !jsonObj.get("vyne").isJsonNull()) {
        DeviceVyneDto.validateJsonObject(jsonObj.getAsJsonObject("vyne"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClaimedDevicesDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClaimedDevicesDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClaimedDevicesDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClaimedDevicesDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ClaimedDevicesDto>() {
           @Override
           public void write(JsonWriter out, ClaimedDevicesDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClaimedDevicesDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ClaimedDevicesDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ClaimedDevicesDto
  * @throws IOException if the JSON string is invalid with respect to ClaimedDevicesDto
  */
  public static ClaimedDevicesDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClaimedDevicesDto.class);
  }

 /**
  * Convert an instance of ClaimedDevicesDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

